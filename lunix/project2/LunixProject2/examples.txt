The `print()` function in Python is a built-in function used to display text, variables, and other information to the console or output stream.

It is a fundamental tool for providing output, debugging, and communicating results in Python programs.

The `print()` function can accept one or more arguments and is highly versatile, allowing customization of the displayed output.

print: print('Hello, World!') - Displays the string 'Hello, World!' to the console.


The `len()` function in Python is a built-in function used to determine the length or the number of elements in various data structures, such as strings, lists, tuples, dictionaries, and more. It is a versatile tool for getting the size or count of elements, which is useful for tasks like iterating over sequences or checking if a container is empty.

To use the `len()` function, you simply pass the data structure or object as an argument, and it returns an integer representing the length. For example, `len("Hello")` will return `5`, and `len([1, 2, 3, 4, 5])` will return `5`. The `len()` function is a helpful utility for various programming tasks in Python.

len: len('Hello') - Returns the length of the string 'Hello', which is 5.
A list in Python is a versatile and widely used data structure that allows you to store and manipulate a collection of items. Lists are ordered, mutable (modifiable), and can contain elements of different data types.

You can create lists by enclosing elements in square brackets, separated by commas. Lists support various operations such as appending, extending, slicing, and iterating through elements, making them an essential tool for managing collections of data in Python.

list: list([1, 2, 3]) - Converts the iterable into a list.

A dictionary in Python is a fundamental data structure used to store data in key-value pairs. It is an unordered and mutable collection that allows you to access and manipulate values based on their associated keys.

To create a dictionary, you enclose key-value pairs in curly braces, separated by colons, like this: `{'key1': 'value1', 'key2': 'value2'}`. Dictionary keys are unique, immutable, and serve as the identifiers for their corresponding values.

Dictionaries offer efficient look-up operations, making them suitable for tasks like storing configuration settings, caching data, or representing structured information. They are an essential data structure in Python for various programming tasks.

dict: dict([(1, 'one'), (2, 'two')]) - Creates a dictionary with the given key-value pairs.

An `int` in Python refers to the integer data type, representing whole numbers without fractional parts. Integers can be positive or negative and are commonly used for arithmetic operations and counting.

int: int('10') - Converts the string '10' to an integer.
